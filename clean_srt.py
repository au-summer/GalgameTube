#   ____ _                    ____  ____ _____
#  / ___| | ___  __ _ _ __   / ___||  _ \_   _|
# | |   | |/ _ \/ _` | '_ \  \___ \| |_) || |
# | |___| |  __/ (_| | | | |  ___) |  _ < | |
#  \____|_|\___|\__,_|_| |_| |____/|_| \_\|_|


# Script to clean up the SRT file generated by youtube auto subtitles

import sys
import srt

# minimum duration of the subtitle in microseconds
MIN_DURATION = 10000


def open_srt(file_name: str) -> list[srt.Subtitle]:
    with open(file_name, "r") as f:
        data = f.read()
        subs = list(srt.parse(data))
        return subs


def clean_srt(subtitles: list[srt.Subtitle]) -> list[srt.Subtitle]:
    for i, sub in enumerate(subtitles):
        # represent start and end time in microseconds
        start = int(sub.start.total_seconds() * 1e6)
        end = int(sub.end.total_seconds() * 1e6)
        # if the duration is less than MIN_DURATION, remove the previous subtitle
        # and merge the current subtitle with the previous one
        if end - start <= MIN_DURATION:
            try:
                # merge the subtitles
                sub.start = subtitles[i - 1].start
                # remove the previous subtitle
                subtitles.pop(i - 1)
            except IndexError:
                pass

    return subtitles


def main():
    file_name = sys.argv[1]
    subs = open_srt(file_name)
    subs = clean_srt(subs)

    # output the cleaned subtitles
    with open(file_name, "w") as f:
        f.write(srt.compose(subs))


if __name__ == "__main__":
    main()
